{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HYDRATE } from 'next-redux-wrapper';\nimport user from './user';\nimport post from './post';\nimport { combineReducers } from 'redux'; // combineReducers로 나눠져있는 리듀서들을 합쳐준다.\n// HYDRATE를 사용하기 위해 index 리듀서를 추가한다.\n\nconst rootReducer = combineReducers({\n  index: (state = {}, action) => {\n    switch (action.type) {\n      case HYDRATE:\n        console.log('HYDRATE', action);\n        return _objectSpread(_objectSpread({}, state), action.payload);\n\n      default:\n        return state;\n    }\n  },\n  user,\n  post\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/jihyewon/Documents/NodeBird/frontend/reducers/index.js"],"names":["HYDRATE","user","post","combineReducers","rootReducer","index","state","action","type","console","log","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC,C,CAEA;AACA;;AACA,MAAMC,WAAW,GAAGD,eAAe,CAAC;AAClCE,EAAAA,KAAK,EAAE,CAACC,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AAC3B,YAAQA,MAAM,CAACC,IAAf;AACE,WAAKR,OAAL;AACES,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;AACA,+CAAYD,KAAZ,GAAsBC,MAAM,CAACI,OAA7B;;AACF;AACE,eAAOL,KAAP;AALJ;AAOD,GATiC;AAUlCL,EAAAA,IAVkC;AAWlCC,EAAAA;AAXkC,CAAD,CAAnC;AAcA,eAAeE,WAAf","sourcesContent":["import { HYDRATE } from 'next-redux-wrapper';\n\nimport user from './user';\nimport post from './post';\nimport { combineReducers } from 'redux';\n\n// combineReducers로 나눠져있는 리듀서들을 합쳐준다.\n// HYDRATE를 사용하기 위해 index 리듀서를 추가한다.\nconst rootReducer = combineReducers({\n  index: (state={}, action) => {\n    switch (action.type){\n      case HYDRATE:\n        console.log('HYDRATE', action)\n        return { ...state, ...action.payload}\n      default: \n        return state;\n    }\n  },\n  user,\n  post,\n})\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}