{"ast":null,"code":"var _jsxFileName = \"/Users/jihyewon/Documents/NodeBird/frontend/components/LoginForm.js\";\nimport { Button } from \"antd\";\nimport PropTypes from 'prop-types';\nimport Link from \"next/link\";\nimport React, { useCallback, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InputContainer = styled.div``;\nconst ButtonsContainer = styled.div``;\nconst Input = styled.input``;\nconst Text = styled.span``;\n\nconst LoginForm = ({\n  setIsLogedIn\n}) => {\n  const {\n    control,\n    getValues,\n    handleSubmit\n  } = useForm();\n  const onSubmit = useCallback(() => {\n    setIsLogedIn(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: \"\\uC544\\uC774\\uB514\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonsContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit(onSubmit),\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nLoginForm.propTypes = {\n  setIsLogedIn: PropTypes.node.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/jihyewon/Documents/NodeBird/frontend/components/LoginForm.js"],"names":["Button","PropTypes","Link","React","useCallback","useState","useForm","styled","InputContainer","div","ButtonsContainer","Input","input","Text","span","LoginForm","setIsLogedIn","control","getValues","handleSubmit","onSubmit","propTypes","node","isRequired"],"mappings":";AAAA,SAASA,MAAT,QAAuB,MAAvB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AAEA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,cAAc,GAAGD,MAAM,CAACE,GAAI,EAAlC;AAEA,MAAMC,gBAAgB,GAAGH,MAAM,CAACE,GAAI,EAApC;AAEA,MAAME,KAAK,GAAGJ,MAAM,CAACK,KAAM,EAA3B;AAEA,MAAMC,IAAI,GAAGN,MAAM,CAACO,IAAK,EAAzB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACtC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA;AAArB,MAAqCb,OAAO,EAAlD;AAEA,QAAMc,QAAQ,GAAGhB,WAAW,CAAC,MAAK;AAChCY,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAF2B,EAE1B,EAF0B,CAA5B;AAIA,sBACE;AAAA,4BACE,QAAC,cAAD;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,cAAD;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,gBAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEG,YAAY,CAACC,QAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,SAAX;AAAA,iCAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAkBD,CAzBD;;AA2BAL,SAAS,CAACM,SAAV,GAAsB;AACpBL,EAAAA,YAAY,EAAEf,SAAS,CAACqB,IAAV,CAAeC;AADT,CAAtB;AAIA,eAAeR,SAAf","sourcesContent":["import { Button } from \"antd\";\n\nimport PropTypes from 'prop-types';\n\nimport Link from \"next/link\";\n\nimport React, { useCallback, useState } from \"react\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport styled from \"styled-components\";\n\nconst InputContainer = styled.div``\n\nconst ButtonsContainer = styled.div``\n\nconst Input = styled.input``\n\nconst Text = styled.span``\n\n\nconst LoginForm = ({ setIsLogedIn }) => {\n  const {control, getValues, handleSubmit} = useForm();\n  \n  const onSubmit = useCallback(()=> {\n    setIsLogedIn(true);\n  },[]);\n  \n  return (\n    <>\n      <InputContainer>\n        <Text>아이디</Text>\n        <Input name=\"username\"></Input>\n      </InputContainer>\n      <InputContainer>\n        <Text>비밀번호</Text>\n        <Input name=\"password\"></Input>\n      </InputContainer>\n      <ButtonsContainer>\n        <Button onClick={handleSubmit(onSubmit)}>로그인</Button>\n        <Button>\n        <Link href=\"/signup\"><a>회원가입</a></Link>\n        </Button>\n      </ButtonsContainer>\n    </>\n  );\n}\n\nLoginForm.propTypes = {\n  setIsLogedIn: PropTypes.node.isRequired\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}